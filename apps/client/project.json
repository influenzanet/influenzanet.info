{
  "name": "client",
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "projectType": "application",
  "sourceRoot": "apps/client/src",
  "prefix": "influenza-net",
  "targets": {
    "build": {
      "executor": "@angular-devkit/build-angular:browser",
      "outputs": ["{options.outputPath}"],
      "options": {
        "outputPath": "dist/apps/client/",
        "index": "apps/client/src/index.html",
        "main": "apps/client/src/main.ts",
        "polyfills": "apps/client/src/polyfills.ts",
        "tsConfig": "apps/client/tsconfig.app.json",
        "inlineStyleLanguage": "scss",
        "assets": [
          "apps/client/src/favicon.ico",
          {"glob": "**/*", "input": "apps/client/src/assets", "ignore": ["**/upload/*"], "output": "/assets" }
        ],
        "styles": [
          "apps/client/src/styles.scss",
          "node_modules/c3/c3.min.css",
          "node_modules/swiper/swiper-bundle.css"
        ],
        "stylePreprocessorOptions": {
          "includePaths": ["apps/client/src/theme"]
        },
        "scripts": [],
        "allowedCommonJsDependencies": ["lodash", "c3", "typeorm", "moment"]
      },
      "configurations": {
        "production": {
          "budgets": [
            {
              "type": "initial",
              "maximumWarning": "1mb",
              "maximumError": "10mb"
            },
            {
              "type": "anyComponentStyle",
              "maximumWarning": "100kb",
              "maximumError": "200kb"
            }
          ],
          "fileReplacements": [
            {
              "replace": "apps/client/src/environments/environment.ts",
              "with": "apps/client/src/environments/environment.prod.ts"
            }
          ],
          "outputHashing": "all"
        },
        "development": {
          "buildOptimizer": false,
          "optimization": false,
          "vendorChunk": true,
          "extractLicenses": false,
          "sourceMap": true,
          "namedChunks": true
        }
      },
      "defaultConfiguration": "production"
    },
    "serve": {
      "executor": "@angular-devkit/build-angular:dev-server",
      "configurations": {
        "production": {
          "buildTarget": "client:build:production"
        },
        "development": {
          "buildTarget": "client:build:development",
          "disableHostCheck": true
        }
      },
      "defaultConfiguration": "development",
      "options": {
        "proxyConfig": "apps/client/proxy.conf.json"
      }
    },
    "extract-i18n": {
      "executor": "@angular-devkit/build-angular:extract-i18n",
      "options": {
        "buildTarget": "client:build"
      }
    },
    "lint": {
      "executor": "@nx/eslint:lint",
      "options": {
        "lintFilePatterns": ["apps/client/**/*.ts", "apps/client/**/*.html"]
      }
    },
    "test": {
      "executor": "@nx/jest:jest",
      "outputs": ["coverage/apps/client"],
      "options": {
        "jestConfig": "apps/client/jest.config.ts",
        "passWithNoTests": true
      }
    },
    "server": {
      "executor": "@angular-devkit/build-angular:server",
      "options": {
        "outputPath": "dist/client/server",
        "main": "apps/client/src/main.server.ts",
        "tsConfig": "apps/client/tsconfig.server.json",
        "inlineStyleLanguage": "scss"
      },
      "configurations": {
        "production": {
          "outputHashing": "media",
          "fileReplacements": [
            {
              "replace": "apps/client/src/environments/environment.ts",
              "with": "apps/client/src/environments/environment.prod.ts"
            }
          ]
        },
        "development": {
          "optimization": false,
          "sourceMap": true,
          "extractLicenses": false
        }
      },
      "defaultConfiguration": "production"
    },
    "app-shell": {
      "executor": "@angular-devkit/build-angular:app-shell",
      "options": {
        "route": "shell"
      },
      "configurations": {
        "production": {
          "buildTarget": "client:build:production",
          "serverTarget": "client:server:production"
        },
        "development": {
          "buildTarget": "client:build:development",
          "serverTarget": "client:server:development"
        }
      },
      "defaultConfiguration": "production"
    }
  },
  "tags": []
}
