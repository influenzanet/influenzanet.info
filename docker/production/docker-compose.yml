version: '3.7'

x-options: &options
  logging:
    driver: "json-file"
    options:
      max-file: "5"
      max-size: "10m"
  restart: unless-stopped
  stdin_open: true
  tty: true

volumes:
  mysql_data:
  node_modules:
  upload:
networks:
  default:

services:
  nginx:
    image: nginx:latest
    volumes:
      - ../apps/client:/app
      - ./nginx.production.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    ports:
      - "${NGINX_HTTP_PORT}:80"
      - "${NGINX_HTTPS_PORT}:443"
    networks:
      default:
        aliases:
          - nginx
    <<: *options

  mysql:
    image: mysql:8
    command: --default-authentication-plugin=mysql_native_password
    ports:
      - "${MYSQL_EXTERNAL_PORT}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ../data/mysql/:/docker-entrypoint-initdb.d/
    environment:
      - "MYSQL_DATABASE=${MYSQL_DATABASE}"
      - "MYSQL_USER=${MYSQL_USER}"
      - "MYSQL_PASSWORD=${MYSQL_PASSWORD}"
      - "MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}"
    networks:
      default:
        aliases:
          - ${MYSQL_HOST}
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
      interval: 2s
      timeout: 10s
      retries: 10
    <<: *options

  node:
    build:
      context: ./../
      dockerfile: ./docker/node.dockerfile
    working_dir: /app
    volumes:
      - ../apps/server:/app
      - ../data:/app/assets/data
      - upload:/app/assets/upload
      - node_modules:/app/node_modules
    environment:
      - "MYSQL_HOST=${MYSQL_HOST}"
      - "MYSQL_DATABASE=${MYSQL_DATABASE}"
      - "MYSQL_USER=${MYSQL_USER}"
      - "MYSQL_PASSWORD=${MYSQL_PASSWORD}"
      - "MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}"
      - "ADMIN_USER=${ADMIN_USER}"
      - "ADMIN_PASSWORD=${ADMIN_PASSWORD}"
    entrypoint: "node main.js"
    ports:
      - "3333:3333"
    networks:
      default:
        aliases:
          - server
    <<: *options
