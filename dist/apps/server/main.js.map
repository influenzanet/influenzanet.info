{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///./src/app/admin/configuration.ts","webpack:///./src/app/admin/models/CountryAdmin.ts","webpack:///./src/app/admin/models/PartnerAdmin.ts","webpack:///./src/app/admin/models/PlatformAdmin.ts","webpack:///./src/app/admin/models/PublicationAdmin.ts","webpack:///./src/app/app.controller.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/platform/platform.controller.ts","webpack:///./src/app/platform/platform.module.ts","webpack:///./src/app/publication/publication.controller.ts","webpack:///./src/app/publication/publication.module.ts","webpack:///./src/environments/database/database.ts","webpack:///../shared/models/Country.ts","webpack:///../shared/models/Partner.ts","webpack:///../shared/models/Platform.ts","webpack:///../shared/models/PlatformData.ts","webpack:///../shared/models/Publication.ts","webpack:///external commonjs \"@adminjs/nestjs\"","webpack:///external commonjs \"@adminjs/typeorm\"","webpack:///external commonjs \"@nestjs/common\"","webpack:///external commonjs \"@nestjs/config\"","webpack:///external commonjs \"@nestjs/core\"","webpack:///external commonjs \"@nestjs/serve-static\"","webpack:///external commonjs \"@nestjs/typeorm\"","webpack:///external commonjs \"adminjs\"","webpack:///external commonjs \"moment\"","webpack:///external commonjs \"tslib\"","webpack:///external commonjs \"typeorm\"","webpack:///external node-commonjs \"path\"","webpack:///webpack/bootstrap","webpack:///./src/main.ts"],"sourcesContent":["import {PlatformAdmin} from \"./models/PlatformAdmin\";\nimport {CountryAdmin} from \"./models/CountryAdmin\";\nimport {PartnerAdmin} from \"./models/PartnerAdmin\";\nimport {PublicationAdmin} from \"./models/PublicationAdmin\";\nimport { AdminModuleOptions } from \"@adminjs/nestjs\";\nimport { ConfigService } from \"@nestjs/config\";\n\n\nexport const adminConfigurationFactory = (configService: ConfigService)=>{\n  return <AdminModuleOptions>{\n    // https://github.com/SoftwareBrothers/adminjs-typeorm/blob/master/example-app/src/index.ts\n    adminJsOptions: {\n      rootPath: '/admin',\n      resources: [\n        PlatformAdmin,\n        CountryAdmin,\n        PartnerAdmin,\n        PublicationAdmin\n      ],\n      locale: {\n        language: 'en',\n        translations: {\n          labels: {\n            Platform: 'Platform (Teams)',\n          },\n          resources: {\n            Platform: {\n              properties: {\n                countryId: 'Country'\n              }\n            }\n          }\n        },\n      },\n      branding: {\n        companyName: 'InfluenzaNet',\n        logo: '/public/influenzanet_logo.png',\n      },\n      assets: {\n        styles: ['/public/css/admin.css'],\n      },\n    },\n    auth: {\n      authenticate: async (email, password) =>{\n        const adminUser = configService.get('ADMIN_USER', 'admin')\n        const adminPassword = configService.get('ADMIN_PASSWORD', 'password');\n        return email === adminUser && password === adminPassword\n          ? Promise.resolve({email: adminUser, password: adminPassword})\n          : null\n      },\n      cookieName: 'influenzaNet-AuthToken',\n      cookiePassword: 'testPass',\n    },\n    sessionOptions: {\n      resave: true,\n      saveUninitialized: true,\n      secret: 'secret'\n    },\n  }\n\n}\n\n\n\n","import {ResourceWithOptions} from \"adminjs/types/src/adminjs-options.interface\";\nimport {Country} from \"@models/Country\";\n\nexport const CountryAdmin: ResourceWithOptions | any = {\n  resource: Country,\n  options: {\n    properties: {\n      'id': { isVisible: false },\n      'name': {\n        type: 'string',\n      },\n    },\n    actions: {\n      show: {isAccessible: false},\n      edit: {showInDrawer: true},\n    },\n    navigation: {\n      icon: 'EarthFilled'\n    }\n  },\n}\n","import {ResourceWithOptions} from \"adminjs/types/src/adminjs-options.interface\";\nimport {Partner} from \"@models/Partner\";\n\n// import uploadFeature from '@adminjs/upload'\n// const path = require(\"path\");\n\nexport const PartnerAdmin: ResourceWithOptions | any = {\n  resource: Partner,\n  options: {\n    properties: {\n      'id': { isVisible: false },\n      'name': {\n        type: 'string',\n        isTitle: true,\n        position: 1\n      },\n      'website': {\n        type: 'string',\n        position: 2\n      },\n      'description': {\n        type: 'richtext',\n        content: 'Changed label',\n        position: 1000,\n        description: ''\n      },\n      actions: {\n        show: {isAccessible: false},\n      },\n      // features: [uploadFeature({\n      //   provider: {local: {bucket: path.resolve('./apps/server/src/public')}},\n      //   properties: {key: 'logo'},\n      // })],\n    },\n    navigation: {\n      icon: 'Partnership'\n    }\n  },\n}\n","import {ResourceWithOptions} from \"adminjs/types/src/adminjs-options.interface\";\nimport uploadFileFeature from '@adminjs/upload';\nimport {Platform} from \"@models/Platform\";\nimport {environment} from \"../../../environments/environment\";\nimport {BaseRecord} from \"adminjs\";\nimport {LocalUploadProvider} from \"../../platform/prodivder/LocalUpload.provider\";\n\nexport const PlatformAdmin: ResourceWithOptions | any = {\n  resource: Platform,\n  options: {\n    properties: {\n      'id': { isVisible: false },\n      'name': {\n        type: 'string',\n        isTitle: true,\n        position: 1\n      },\n      'countryId': {\n        position:2,\n      },\n      'website': {\n        type: 'string',\n        position:3,\n      },\n      'order': {\n        type: 'number',\n        position:3,\n      },\n      'description': {\n        type: 'richtext',\n        content: 'Changed label',\n        position: 1000,\n        description: ''\n      },\n      'logo': {\n        type: 'string',\n        isVisible:true\n      }\n    },\n    actions: {\n      show: {isAccessible: false},\n    },\n    sort: {\n      sortBy: 'order',\n      direction: 'asc',\n    },\n    navigation: {\n      icon: 'Webhook',\n    }\n  },\n  // features: [\n  //   uploadFileFeature({\n  //       // provider: {local: {bucket: environment.production? './assets/upload': './apps/server/src/assets/upload'}},\n  //       provider: new LocalUploadProvider({bucket: environment.production? './assets/upload': './apps/server/src/assets/upload'}),\n  //       properties: {\n  //         file: `logoFile.file`,\n  //         filePath: `logoFile.filePath`,\n  //         filesToDelete: `logoFile.filesToDelete`,\n  //         key: `logoFile.key`,\n  //         mimeType: `logoFile.mime`,\n  //         bucket: `logoFile.bucket`,\n  //         size: `logoFile.size`,\n  //       },\n  //       // multiple: true,\n  //     validation: {\n  //         mimeTypes: ['image/png', 'image/jpg', 'image/jpeg'],\n  //         maxSize: 10485760\n  //     },\n  //     uploadPath: (record: BaseRecord, filename: string)=> `/logo/${filename}`\n  //   })\n  // ]\n}\n","import {ResourceWithOptions} from \"adminjs/types/src/adminjs-options.interface\";\nimport {Publication} from \"@models/Publication\";\n\nexport const PublicationAdmin: ResourceWithOptions | any = {\n  resource: Publication,\n  options: {\n    properties: {\n      'id': { isVisible: false },\n      'title': {\n        type: 'string',\n      },\n      'authors': {\n        type: 'string',\n      },\n      'publisher': {\n        type: 'string',\n      },\n      'publicationDate': {\n        type: 'date',\n      },\n      'url': {\n        type: 'string',\n      },\n    },\n    actions: {\n      show: {isAccessible: false},\n      edit: {showInDrawer: true},\n      new: {showInDrawer: true},\n      list: {\n        before: async (request, context) => {\n          request.query.perPage = 20;\n          return request\n        }\n      }\n    },\n    sort: {\n      sortBy: 'publicationDate',\n      direction: 'desc',\n    },\n    navigation: {\n      icon: 'Book'\n    }\n  },\n}\n","import { Controller, Get } from '@nestjs/common';\n\n@Controller()\nexport class AppController {\n  constructor() {}\n}\n","import {Module} from '@nestjs/common';\nimport {AppController} from './app.controller';\nimport {TypeOrmModule} from \"@nestjs/typeorm\";\nimport {AdminModule} from \"@adminjs/nestjs\";\nimport * as AdminJSTypeorm from '@adminjs/typeorm'\nimport AdminJS from 'adminjs'\nimport {ServeStaticModule} from \"@nestjs/serve-static\";\nimport {PlatformModule} from \"./platform/platform.module\";\nimport {PublicationModule} from \"./publication/publication.module\";\nimport { adminConfigurationFactory } from \"./admin/configuration\";\nimport {resolve} from 'path';\nimport { ConfigModule, ConfigService } from \"@nestjs/config\";\nimport { databaseConfigurationFactory } from \"../environments/database/database\";\n\n// Register typeorm adapter\nAdminJS.registerAdapter({\n  Resource: AdminJSTypeorm.Resource,\n  Database: AdminJSTypeorm.Database,\n})\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      ignoreEnvFile: true,\n      isGlobal: true,\n    }),\n    ServeStaticModule.forRoot({\n      rootPath: resolve(__dirname, 'assets'),\n      serveRoot: '/public/',\n    }),\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: databaseConfigurationFactory,\n    }),\n    AdminModule.createAdminAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: adminConfigurationFactory\n    }),\n    PlatformModule,\n    PublicationModule,\n  ],\n  controllers: [AppController],\n  providers: [],\n})\nexport class AppModule {}\n","import {Controller, Get} from '@nestjs/common';\nimport {Platform} from \"@models/Platform\";\nimport {InjectEntityManager, InjectRepository} from \"@nestjs/typeorm\";\nimport {EntityManager, Repository} from \"typeorm\";\n\n@Controller('platform')\nexport class PlatformController {\n\n  constructor(\n    @InjectRepository(Platform) public platform: Repository<Platform>,\n  ) {}\n\n  @Get('/')\n  async findAll(): Promise<Platform[]> {\n    return await this.platform.find({relations: ['country'],})\n  }\n\n}\n","import { Module } from '@nestjs/common';\nimport {TypeOrmModule} from \"@nestjs/typeorm\";\nimport {Platform} from \"@models/Platform\";\nimport {PlatformController} from \"./platform.controller\";\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Platform])],\n  controllers: [PlatformController],\n})\nexport class PlatformModule {}\n","import {Controller, Get} from '@nestjs/common';\nimport { InjectRepository} from \"@nestjs/typeorm\";\nimport { Repository} from \"typeorm\";\nimport {Publication} from \"@models/Publication\";\n\n@Controller('publication')\nexport class PublicationController {\n  constructor(@InjectRepository(Publication) public publication: Repository<Publication>) {}\n\n  @Get('/')\n  async findAll(): Promise<Publication[]> {\n    return await this.publication.find({})\n  }\n}\n","import { Module } from '@nestjs/common';\nimport {TypeOrmModule} from \"@nestjs/typeorm\";\nimport {Publication} from \"@models/Publication\";\nimport {PublicationController} from \"./publication.controller\";\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Publication])],\n  controllers: [PublicationController],\n})\nexport class PublicationModule {}\n","import {Platform} from \"@models/Platform\";\nimport {Country} from \"@models/Country\";\nimport {Partner} from \"@models/Partner\";\nimport {Publication} from \"@models/Publication\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { TypeOrmModuleOptions } from \"@nestjs/typeorm\";\n\nexport const databaseConfigurationFactory = (configService: ConfigService): TypeOrmModuleOptions => {\n  return <TypeOrmModuleOptions>{\n    type: \"mysql\",\n    host: configService.get('MYSQL_HOST', 'mysql'),\n    port: configService.get('MYSQL_PORT', 3306),\n    database: configService.get('MYSQL_DATABASE', 'influenzanet'),\n    username: configService.get('MYSQL_USER',\"user\"),\n    password: configService.get('MYSQL_PASSWORD', \"password\"),\n    extra: {\n      charset: \"utf8mb4_unicode_ci\",\n    },\n    entities: [\n      Platform,\n      Country,\n      Partner,\n      Publication\n    ],\n    autoLoadEntities: false,\n    synchronize: false,\n  }\n}\n","import {BaseEntity, Entity, Column, PrimaryGeneratedColumn, OneToMany} from 'typeorm';\nimport {ResourceWithOptions} from \"adminjs/types/src/adminjs-options.interface\";\nimport {Platform} from \"./Platform\";\n\n@Entity({name:'country'})\nexport class Country extends BaseEntity{\n  constructor(data: Partial<Country>) {\n    super()\n    Object.assign(this, data)\n  }\n\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  name: string;\n\n  // @OneToMany(() => Platform, (platform: Platform) => platform.country)\n  @OneToMany('platform', 'country')\n  platforms: Array<Platform>\n}\n","import {BaseEntity, Entity, Column, PrimaryGeneratedColumn, OneToMany, ManyToMany, JoinTable} from 'typeorm';\nimport {ResourceWithOptions} from \"adminjs/types/src/adminjs-options.interface\";\nimport {Platform} from \"./Platform\";\n// import uploadFeature from '@adminjs/upload'\n// const path = require(\"path\");\n\n@Entity({name:'partner'})\nexport class Partner extends BaseEntity{\n\n  constructor(id: number, name: string, logo: string, website: string, description: string, platform: Platform[]) {\n    super();\n    this.id = id;\n    this.name = name;\n    this.logo = logo;\n    this.website = website;\n    this.description = description;\n    this.platform = platform;\n  }\n\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  name: string\n\n  @Column()\n  logo: string\n\n  @Column({nullable:true})\n  website?: string\n\n  @Column({nullable:true})\n  description?: string;\n\n  @ManyToMany(() => Platform)\n  @JoinTable()\n  platform: Platform[]\n}\n\n","import {BaseEntity, Entity, Column, PrimaryGeneratedColumn, ManyToOne, RelationId, ManyToMany} from 'typeorm';\nimport {Country} from \"./Country\";\nimport {Partner} from \"./Partner\";\nimport {\n  PlatformData, platformDataResponseFeature, PlatformFeature\n} from \"@models/PlatformData\";\n\n\n@Entity({name:'platform'})\nexport class Platform extends BaseEntity{\n  constructor(\n    id: number,\n    name: string,\n    description: string,\n    website: string,\n    filePrefix: string,\n    country: Country,\n    countryId: number,\n    partner: Partner[],\n    data?:PlatformData,\n    logo?:string\n  ) {\n    super();\n    this.id = id;\n    this.name = name;\n    this.description = description;\n    this.website = website;\n    this.filePrefix = filePrefix;\n    this.country = country;\n    this.countryId = countryId;\n    this.partner = partner;\n    this.data = data\n    this.logo = logo\n\n    this.graphData = this.graphData || new GraphData();\n  }\n\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  name: string;\n\n  @Column({nullable:true})\n  description?: string;\n\n  @Column({nullable:true})\n  website?: string;\n\n  @Column()\n  filePrefix: string\n\n  @Column({default: true})\n  active: boolean\n\n  @Column({default:100, nullable:true})\n  order: number\n\n  @Column({nullable: true})\n  logo?: string\n\n  @ManyToOne('country', 'platforms')\n  country: Country\n\n  @RelationId((platform: Platform) => platform.country)\n  @Column()\n  countryId: number;\n\n  @ManyToMany(() => Partner)\n  partner: Partner[]\n\n  data: PlatformData\n  graphData?: GraphData\n}\n\n\nexport class GraphDataFeature{\n  constructor(data?: Partial<GraphDataFeature>) {\n    data && Object.assign(this, data)\n    this.rows = this.rows || ([] as platformDataResponseFeature[])\n  }\n  rows: platformDataResponseFeature[]\n  hasData?: boolean\n}\n\nexport class GraphDataFeatureIndexed{[key: string]: GraphDataFeature}\n\nexport class GraphData {\n  constructor(data?: Partial<PlatformData>) {\n    data && Object.assign(this, data)\n    this.active = this.active || new GraphDataFeatureIndexed()\n    this.incidence = this.incidence || new GraphDataFeatureIndexed()\n    this.visits_cumulated = this.visits_cumulated || new GraphDataFeatureIndexed()\n  }\n  active: GraphDataFeatureIndexed\n  incidence: GraphDataFeatureIndexed\n  visits_cumulated: GraphDataFeatureIndexed\n}\n","import {Platform} from \"@models/Platform\";\nimport * as moment from \"moment\";\n\nexport class PlatformFeature{\n  constructor(data: any) {\n    if(!!data?.yw){\n      this.week = Number(data.yw.toString().slice(-2))\n      this.year = Number(data.yw.toString().slice(0, 4))\n      this.month = moment().day(\"Monday\").year(this.year).isoWeek(this.week).toDate().getMonth()\n      this.isFirstOfMonth = moment().year(this.year).month(this.month).startOf('month').isoWeekday(8).isoWeek() === this.week;\n    }\n    if(data.dataType) this.dataType = data.dataType\n  }\n  year: number\n  week: number\n  month: number\n  isFirstOfMonth: boolean\n  dataType?: platformDataType\n  value?: number\n  min?: number\n  max?: number\n}\n\nexport class PlatformData {\n  constructor(data: Partial<PlatformData>) { Object.assign(this, data)}\n  active: PlatformDataActive[]\n  incidence: PlatformDataIncidence[]\n  visits_cumulated: PlatformDataVisitsCumulated[]\n}\n\nexport class PlatformDataActive extends PlatformFeature{\n  constructor(data: Partial<PlatformDataActive>) {\n    super(data);\n    Object.assign(this, data)\n    this.value = this.value || this.active\n  }\n  active: number\n  method: string\n  season: string\n  syndrome: string\n  yw: string\n\n  // avgKey:string = 'active'\n  // maxKey:string = 'upper'\n  // minKey:string = 'lower'\n}\n\nexport class PlatformDataIncidence extends PlatformFeature {\n  constructor(data: Partial<PlatformDataIncidence>) {\n    super(data);\n    Object.assign(this, data)\n    this.min = this.lower * 1000\n    this.value = this.incidence * 1000\n    this.max = this.upper * 1000\n  }\n  active: string\n  count: number\n  incidence: number\n  lower: number\n  method: string\n  part: number\n  season: number\n  syndrome: string\n  type: string\n  upper: number\n  yw: string\n  // avgKey:string = 'active'\n}\n\nexport class PlatformDataVisitsCumulated extends PlatformFeature{\n  constructor(data: Partial<PlatformDataVisitsCumulated>) {\n    super(data);\n    Object.assign(this, data)\n    this.min = this.cum_prop_adj_low * 100\n    this.value = this.cum_prop_adj * 100\n    this.max = this.cum_prop_adj_up * 100\n  }\n  cum_prop_adj: number\n  cum_prop_adj_low: number\n  cum_prop_adj_up: number\n  cum_prop_raw; number\n  n_adj: number\n  n_missing: string\n  n_total: number\n  n_weight: number\n  prop_adj: number\n  prop_adj_low: number\n  prop_adj_up: number\n  prop_raw: number\n  season: number\n  syndrome: string\n  total_adj: number\n  total_weight: number\n  variable: string\n  yw: string\n\n\n}\n\n\nexport type platformDataType = 'active'|'incidence'|'visits_cumulated'\n\nexport type platformDataResponse = {\n  platform:Platform,\n  data:(PlatformDataIncidence|PlatformDataActive|PlatformDataVisitsCumulated)[] | undefined\n  dataType:platformDataType\n}\n\nexport type platformDataResponseFeature = PlatformDataIncidence|PlatformDataActive|PlatformDataVisitsCumulated\n","import {BaseEntity, Entity, Column, PrimaryGeneratedColumn, OneToMany} from 'typeorm';\n\n@Entity({name:'publication'})\nexport class Publication extends BaseEntity{\n  constructor(id: number, title: string, authors: string) {\n    super();\n    this.id = id;\n    this.title = title;\n    this.authors = authors;\n  }\n\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  title: string;\n\n  @Column({type:'varchar', length: 200})\n  authors: string;\n\n  @Column()\n  publisher: string;\n\n  @Column()\n  publicationDate: string\n\n  @Column({nullable:true})\n  url?: string\n}\n\n","module.exports = require(\"@adminjs/nestjs\");","module.exports = require(\"@adminjs/typeorm\");","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/config\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@nestjs/serve-static\");","module.exports = require(\"@nestjs/typeorm\");","module.exports = require(\"adminjs\");","module.exports = require(\"moment\");","module.exports = require(\"tslib\");","module.exports = require(\"typeorm\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\nimport { Logger } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\nimport { AppModule } from './app/app.module';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule, { cors: true });\n  const globalPrefix = 'api';\n  app.setGlobalPrefix(globalPrefix);\n  const port = process.env.PORT || 3333;\n  await app.listen(port);\n  Logger.log(\n    `🚀 Application is running on: http://localhost:${port}/${globalPrefix}`\n  );\n}\n\nbootstrap();\n"],"names":["adminConfigurationFactory","configService","adminJsOptions","rootPath","resources","PlatformAdmin","CountryAdmin","PartnerAdmin","PublicationAdmin","locale","language","translations","labels","Platform","properties","countryId","branding","companyName","logo","assets","styles","auth","authenticate","email","password","adminUser","get","adminPassword","Promise","resolve","cookieName","cookiePassword","sessionOptions","resave","saveUninitialized","secret","resource","Country","options","isVisible","type","actions","show","isAccessible","edit","showInDrawer","navigation","icon","Partner","isTitle","position","content","description","sort","sortBy","direction","Publication","new","list","before","request","context","query","perPage","AppController","constructor","Controller","registerAdapter","Resource","AdminJSTypeorm","Database","AppModule","Module","imports","ConfigModule","forRoot","ignoreEnvFile","isGlobal","ServeStaticModule","__dirname","serveRoot","TypeOrmModule","forRootAsync","inject","ConfigService","useFactory","databaseConfigurationFactory","AdminModule","createAdminAsync","PlatformModule","PublicationModule","controllers","providers","PlatformController","platform","findAll","this","find","relations","Get","InjectRepository","Repository","forFeature","PublicationController","publication","host","port","database","username","extra","charset","entities","autoLoadEntities","synchronize","BaseEntity","data","super","Object","assign","PrimaryGeneratedColumn","Column","OneToMany","Array","Entity","name","Partial","id","website","nullable","ManyToMany","JoinTable","filePrefix","country","partner","graphData","GraphData","default","ManyToOne","RelationId","PlatformData","GraphDataFeature","rows","GraphDataFeatureIndexed","active","incidence","visits_cumulated","PlatformFeature","yw","week","Number","toString","slice","year","month","moment","day","isoWeek","toDate","getMonth","isFirstOfMonth","startOf","isoWeekday","dataType","PlatformDataActive","value","PlatformDataIncidence","min","lower","max","upper","PlatformDataVisitsCumulated","cum_prop_adj_low","cum_prop_adj","cum_prop_adj_up","title","authors","length","module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","app","NestFactory","create","cors","setGlobalPrefix","PORT","listen","Logger","log","bootstrap"],"sourceRoot":""}